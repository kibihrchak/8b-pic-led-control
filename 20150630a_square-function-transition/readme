% LED PWM Brightness Square Function Transition
% Marko Oklobd≈æija
% `20150630u175146`

<!-- vim: set ft=pandoc: -->

# Overview

The aim is to improve upon the previous brightness lookup table test, by
introducing transition smoothing.

# Description

The LED PWM lookup table index change function has a period of 4
seconds. Each half-period consists out of two parts. In the first part
the output is a square function of time, in the second part, inverse of
the first part.

Result          Value
--------------- --------------
prescaler       32
TMR0 init val.  14

PWM duty cycle resolution is 10 bits.

# Hardware Setup

GP2 pin is used as PWM output. Other pins are unused (input).

# Unsorted

## `20150630u175924` New Idea

The new idea is - control transition with wide variables.

This approach will make condition checks more expensive, but will yield
better precision, and simpler middle point transition. These factors
mean that lower range for variables can be used - 16b. This will result
in missing steps, but that is not that critical, because of the way
control is done.

## `20150630u175151` Issues with The Previous Solution

The previous version characteristics are:

1.  Use 32b wide variables for index, and increment
2.  Use lookup table index for controlling the transition

The flaws of this approach are:

1.  Wide variables require more calculation
2.  Lookup table index control is prone to errors due to its lower
    precision
3.  Transition from speeding up, to slowing down is different if there
    is even, or odd number of steps
4.  No step in the middle range must be missed, because of the required
    symmetry

The second point is of importance. When transitioning downwards,
transition will stop at the instance index value reaches the target
value. But, the wide index will not yet reach the expected value.

Example: Let's do up-down loop between values 0, and 255. When going to
0, the transition will stop when the lookup table index becomes 0. The
index variable will at that moment have a value less than the rounding
error, in the case of 24b variable value is maximum 65535. This value is
not zero. Then, looking how the transition started from 0, where index
variable was 0, this means that, during going back, the index variable
will bounce up the upper limit (that value being 65535) for getting the
index value 0, and then start increasing.

